[
  {
    "tags": [
      {
        "type": "param",
        "types": [
          "String"
        ],
        "name": "file",
        "description": "[optional] Path to the mtgjson file to import",
        "optional": false
      },
      {
        "type": "param",
        "types": [
          "Object"
        ],
        "name": "opts",
        "description": "[optional] The options hash",
        "optional": false
      },
      {
        "type": "param",
        "types": [
          "Function"
        ],
        "name": "cb",
        "description": "[optional] The callback function",
        "optional": false
      },
      {
        "type": "return",
        "types": [
          "Promise"
        ],
        "description": "Resolves to the sqlite3 cb object"
      }
    ],
    "description": {
      "full": "<p>Load a mtgjson file into the sqlite db</p><p>All parameters are optional. If no file is specified <code>load</code> will attempt to<br />download the latest data from mtgjson.com (with extras) and import that.</p><p>The <code>opts</code> options hash can be used to pass configuration options valid<br />options include:</p><ul>\n<li><code>dbfile</code>: A string. Where the sqlite data file is or should be created</li>\n<li><code>extras</code>: A boolean. Whether or not to include extras data. When using a<br />local file this will be inferred from the available data and used if<br />possible. Defaults to <code>true</code>.</li>\n</ul>\n<p>Pass a callback function <code>cb</code> as the final parameter. It will be given an<br />error (or <code>null</code> if there was none) and a handle to the sqlite3 database.</p><p>The returned promise will resolve to the sqlite3 db object when the load<br />completes.</p>",
      "summary": "<p>Load a mtgjson file into the sqlite db</p>",
      "body": "<p>All parameters are optional. If no file is specified <code>load</code> will attempt to<br />download the latest data from mtgjson.com (with extras) and import that.</p><p>The <code>opts</code> options hash can be used to pass configuration options valid<br />options include:</p><ul>\n<li><code>dbfile</code>: A string. Where the sqlite data file is or should be created</li>\n<li><code>extras</code>: A boolean. Whether or not to include extras data. When using a<br />local file this will be inferred from the available data and used if<br />possible. Defaults to <code>true</code>.</li>\n</ul>\n<p>Pass a callback function <code>cb</code> as the final parameter. It will be given an<br />error (or <code>null</code> if there was none) and a handle to the sqlite3 database.</p><p>The returned promise will resolve to the sqlite3 db object when the load<br />completes.</p>"
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 2,
    "codeStart": 27,
    "code": "var load = function(file, opts, cb) {\n  'use strict';",
    "ctx": {
      "type": "function",
      "name": "load",
      "string": "load()"
    }
  },
  {
    "tags": [],
    "description": {
      "full": "<p>code</p>",
      "summary": "<p>code</p>",
      "body": ""
    },
    "isPrivate": false,
    "isConstructor": false,
    "isEvent": false,
    "ignore": false,
    "line": 29,
    "codeStart": 30,
    "code": "};\n\nmodule.exports = load;"
  }
]